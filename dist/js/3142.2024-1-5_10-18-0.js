"use strict";(self["webpackChunkfastwork"]=self["webpackChunkfastwork"]||[]).push([[3142],{43142:function(r,n,t){t.r(n),n["default"]='<template>\r\n  <div>\r\n    <Table border\r\n           :columns="columns"\r\n           :data="tableData">\r\n      <template v-for="uniSlot in slotArr"\r\n                slot-scope="{ row, index }"\r\n                :slot="uniSlot">\r\n        <slot :name="uniSlot"\r\n              :row="row"\r\n              :index="index"></slot>\r\n      </template>\r\n    </Table>\r\n    <div style="margin-top: 10px; text-align: right;">\r\n      <Page :total="total"\r\n            :current="page"\r\n            :page-size="rows"\r\n            @on-change="changePage"\r\n            @on-page-size-change="changePageSize"\r\n            :disabled="currentParams === null"\r\n            size="small"\r\n            show-total\r\n            show-elevator\r\n            show-sizer />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \'tableZen\',\r\n  props: {\r\n    // columns: {\r\n    //   type: Array,\r\n    //   default () {\r\n    //     return []\r\n    //   }\r\n    // },\r\n  },\r\n  components: {},\r\n  data () {\r\n    return {\r\n      columns: [],\r\n      slotArr: [],\r\n      page: 1,\r\n      total: 0,\r\n      rows: 10,\r\n      loading: false,\r\n      useCurrentParams: true, // 使用外部的参数\r\n      tempParams: null,\r\n      currentParams: null,\r\n      outNext_: null, // 外部的next\r\n      setTableData_: null,\r\n      selectionItems: [],\r\n      tableData: []\r\n    }\r\n  },\r\n  watch: {},\r\n  computed: {},\r\n  methods: {\r\n    // 分页相关方法\r\n    changePage (page) {\r\n      this.page = page\r\n      this.useCurrentParams = false\r\n      this.setTableDataCore()\r\n    },\r\n    changePageSize (rows) {\r\n      this.rows = rows\r\n      this.useCurrentParams = false\r\n      this.setTableDataCore()\r\n    },\r\n    getParams (currentParams) { // 接口传参的时候一定要用这个函数过滤\r\n      if (this.useCurrentParams) {\r\n        this.tempParams = { ...currentParams }\r\n        return currentParams\r\n      } else {\r\n        return this.currentParams\r\n      }\r\n    },\r\n    getSlot () {\r\n      this.slotArr = []\r\n      this.columns.forEach(item => {\r\n        if (item.slot) {\r\n          this.slotArr.push(item.slot)\r\n        }\r\n      })\r\n    },\r\n    search ({\r\n      columns = [],\r\n      setTableData = null,\r\n      outNext = null\r\n    }) {\r\n      this.columns = columns\r\n      this.getSlot()\r\n      this.outNext_ = outNext\r\n      this.setTableData_ = setTableData\r\n      this.useCurrentParams = true\r\n      this.page = 1\r\n      this.setTableDataCore()\r\n    },\r\n    setTableDataCore () {\r\n      this.loading = true\r\n      this.selectClear()\r\n      const ctx = this\r\n      this.setTableData_ && this.setTableData_(ctx, this.setTableData_callback)\r\n      // this.$emit(\'getTableData\', ctx, this.getTableData_callback)\r\n    },\r\n    setTableData_callback () {\r\n      this.loading = false\r\n      if (this.useCurrentParams) {\r\n        this.currentParams = { ...this.tempParams }\r\n      }\r\n      this.outNext_ && this.outNext_()\r\n    },\r\n    selectClear () {\r\n      this.selectionItems = []\r\n    },\r\n  },\r\n  created () { },\r\n  activated () { },\r\n  mounted () { },\r\n  beforeDestroy () { }\r\n}\r\n<\/script>\r\n\r\n<style>\r\n</style>\r\n'}}]);