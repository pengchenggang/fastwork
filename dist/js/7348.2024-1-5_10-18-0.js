"use strict";(self["webpackChunkfastwork"]=self["webpackChunkfastwork"]||[]).push([[7348],{17348:function(r,n,e){e.r(n),n["default"]="## 缺点\r\n* 本想在这个markdown组件里面兼容vue组件\r\n* 但是经过分析，虽然vitePress等支持了，这里实现起来有些本末倒置了。\r\n* 有三方组件可以实现，但是也许还有坑，我这里也够用了。\r\n\r\n## markdown 组件使用\r\n\r\n```\r\n<markdown :mFile=\"mFile\"></markdown>\r\n```\r\n* 变量数据\r\n```\r\ndata () {\r\n    return {\r\n      mFile: 'src/views/components/loadMarkdownPage/loadMarkdownPage.md'\r\n    }\r\n  },\r\n```\r\n\r\n## markdown 组件开发完成\r\n* 源码如下\r\n```xml\r\n<template>\r\n  <div>\r\n    <div v-html=\"html\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'markdown',\r\n  props: {\r\n    mFile: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n  },\r\n  components: {},\r\n  data () {\r\n    return {\r\n      html: '',\r\n    }\r\n  },\r\n  watch: {},\r\n  computed: {},\r\n  methods: { },\r\n  created () { },\r\n  activated () { },\r\n  mounted () {\r\n    if (this.mFile) {\r\n      const hljs = require('highlight.js')\r\n      const MarkdownIt = require('markdown-it')\r\n      const md = new MarkdownIt({\r\n        highlight: function (str, lang) {\r\n          if (lang && hljs.getLanguage(lang)) {\r\n            try {\r\n              return '<div class=\"codeInClass\"><pre><code class=\"hljs\">' +\r\n                hljs.highlight(lang, str, true).value +\r\n                '</code></pre></div>'\r\n            } catch (__) { }\r\n          }\r\n          console.info('md.utils.escapeHtml(str)', md)\r\n          return '<div class=\"codeInClass\"><pre><code class=\"hljs\">' + md.utils.escapeHtml(str) + '</code></pre></div>'\r\n        }\r\n      })\r\n      const codeUrl = this.mFile.replace('src/', '')\r\n      import(`../../${codeUrl}`).then(module => {\r\n        const t = md.render(module.default)\r\n        this.html = md.render(module.default).replace(/\\<h2>(.*?)<\\/h2>/g, function (itemA, a1) {\r\n          console.info('itemA', itemA, a1)\r\n          return `<h2 id='${escape(a1)}'>${a1}</h2>`\r\n        })\r\n      })\r\n    }\r\n  },\r\n  beforeDestroy () { }\r\n}\r\n<\/script>\r\n\r\n<style>\r\n</style>\r\n\r\n```\r\n"}}]);