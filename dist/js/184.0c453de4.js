"use strict";(self["webpackChunkfastwork"]=self["webpackChunkfastwork"]||[]).push([[184],{9184:function(t,n,r){r.r(n);r(7658);class e{constructor(){this.arr=[],this.ctx={goto:this.goto,_root:this,ifTo:this.ifTo,nextJump:this.nextJump},this.cIndex=0,this.next=null}nextJump(t=1){this._root.cIndex=this._root.cIndex+t+1;const n=this._root.arr[this._root.cIndex];console.info(`%cnextJump one 跳过后 ${t}个 的执行函数是: ${n.func.name} `,"color:green"),this._root._innerRun(n.func,n.next)}ifTo(t,n){return!!t&&(n(),!0)}goto(t){let n=-1;console.info("this.arr",this),this._root.arr.map(((r,e)=>{r.ref===t&&(n=e)})),-1!==n?(this._root.cIndex=n,this._root._innerRun(this._root.arr[n].func,this._root.arr[n].next)):console.error("未找到goto方法名为"+t+"的函数")}use(t,n){const r={ref:""},e={...r,...n},s={...e,func:t,next:()=>{}};if(this.arr.push(s),this.arr.length>1){const n=this.arr.length-2,r=()=>{this.cIndex=n+1,this._innerRun(t,this.arr[n+1].next)};this.arr[n].next=r}return this}getFuncName(t){var n=t.toString();return n=n.substr("function ".length),n=n.substr(0,n.indexOf("(")),n}_innerRun(t,n){console.info(`%cfuncName: ${t.name?t.name:""}-${this.getFuncName(t)}-ref:${this.arr[this.cIndex].ref}`,"color:green"),this.next=n,0===t.length&&t(),1===t.length&&t(n),2===t.length&&t(this.ctx,n)}run(t){if(t&&this.arr.length>0){const n=this.arr.length-1;this.arr[n].next=t}this.arr.length>0&&this._innerRun(this.arr[0].func,this.arr[0].next)}}n["default"]=e}}]);