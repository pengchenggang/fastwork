"use strict";(self["webpackChunkfastwork"]=self["webpackChunkfastwork"]||[]).push([[494],{3494:function(n,r,e){e.r(r),r["default"]='<template>\r\n  <div>\r\n    <compLayout>\r\n      <h1>Plopjs 微型脚手架</h1>\r\n      <h2 id="GS">概述</h2>\r\n      <ul class="list">\r\n        <li>主要功能：创建页面模板文件</li>\r\n        <li>plopjs 官网：<a href="https://plopjs.com/documentation/"\r\n             target="_blank">https://plopjs.com/documentation/</a></li>\r\n      </ul>\r\n      <h2 id="安装依赖库">安装依赖库</h2>\r\n      <c>npm install --save-dev plop</c> 先把库装上\r\n      <h2 id="配置文件">配置文件</h2>\r\n      <p>根目录创建 <c>plopfile.js</c>\r\n      </p>\r\n      <codeIn>\r\n        <pre v-highlight><code>export default function (plop) {\r\n  // 入口函数\r\n  plop.setGenerator(\'basics\', {\r\n    description: \'描述文字不显示在控制台\',\r\n    prompts: [], // 这里是提问的问题\r\n    actions: [], // 这里是执行的函数\r\n  })\r\n};</code></pre>\r\n      </codeIn>\r\n      <h2 id="执行脚本">执行脚本</h2>\r\n      <codeIn>\r\n        <pre v-highlight><code>// package.json\r\n{\r\n    ...,\r\n    "scripts": {\r\n        "plop": "plop"\r\n    },\r\n    ...\r\n}</code></pre>\r\n      </codeIn>\r\n      <h2 id="修改脚本类型">修改脚本类型</h2>\r\n      <p>如果不了解ESM,可以看我写的这篇文章\r\n        <a href="https://www.cnblogs.com/pengchenggang/p/17037512.html"\r\n           target="_blank">CommonJs VS ES Module</a>\r\n      </p>\r\n\r\n      <codeIn>\r\n        <pre v-highlight><code>// package.json\r\n{\r\n    ...,\r\n    "type": "module",\r\n    ...\r\n}</code></pre>\r\n      </codeIn>\r\n      <blockquote>\r\n        <p>到这里我们已经可以通过 <c>npm run plop</c> 跑通这个命令了，最小循环已完成，下面进行配置文件的扩展。</p>\r\n      </blockquote>\r\n      <h2 id="配置文件带提问">配置文件带提问</h2>\r\n      <codeIn>\r\n        <pre v-highlight><code>export default function (plop) {\r\n    // controller generator\r\n    plop.setGenerator(\'controller\', {\r\n        description: \'application controller logic\',\r\n        prompts: [{\r\n            type: \'input\',\r\n            name: \'name\',\r\n            message: \'controller name please\'\r\n        }],\r\n        actions: [{\r\n            type: \'add\',\r\n            path: \'src/{_{ name }_}.js\', // 请忽略下划线\r\n            templateFile: \'plop-templates/controller.hbs\'\r\n        }]\r\n    });\r\n};</code></pre>\r\n      </codeIn>\r\n      <ul class="list">\r\n        <li>\r\n          <p>执行 <c>npm run plop</c> 查看下效果</p>\r\n        </li>\r\n        <li>报错 发现找不到 <c>plop-templates/controller.hbs</c> 文件</li>\r\n      </ul>\r\n      <h2 id="创建模板文件">创建模板文件</h2>\r\n      <ul class="list">\r\n        <li>先在根目录创建 <c>plop-templates</c> 目录</li>\r\n        <li>再在里面创建 <c>controller.hbs</c> 文件</li>\r\n        <li>执行 <c>npm run plop</c> 输入name, 然后会在src的目录下生成指定的文件</li>\r\n      </ul>\r\n      <h2 id="恢复commonjs">恢复commonjs</h2>\r\n      <ul class="list">\r\n        <li>package.json中 如果不写type, 默认是commonjs。</li>\r\n        <li>\r\n          <c>"type": "commonjs"</c>\r\n        </li>\r\n        <li>之前我们改为了 <c>"type": "module",</c>, 现在我们恢复回来</li>\r\n        <li>为什么恢复？因为我用的vue cli,之前的代码都用的commonjs,我懒的改了</li>\r\n      </ul>\r\n      <blockquote>\r\n        <p>删除 package.json 中的 <c>"type": "module",</c>\r\n        </p>\r\n      </blockquote>\r\n      <h3>plopfile.js</h3>\r\n      <codeIn>\r\n        <pre v-highlight><code>module.exports = function (plop) {\r\n  // controller generator\r\n  plop.setGenerator(\'controller\', {\r\n    description: \'application controller logic\',\r\n    prompts: [{\r\n      type: \'input\',\r\n      name: \'name\',\r\n      message: \'controller name please\'\r\n    }],\r\n    actions: [{\r\n      type: \'add\',\r\n      path: \'src/{_{name}_}.vue\', // 忽略下划线\r\n      templateFile: \'plop-templates/controller.hbs\'\r\n    }]\r\n  })\r\n}</code></pre>\r\n      </codeIn>\r\n\r\n    </compLayout>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \'plopjs\',\r\n  props: {},\r\n  components: {},\r\n  data () {\r\n    return {\r\n    }\r\n  },\r\n  watch: {},\r\n  computed: {},\r\n  methods: {},\r\n  created () { },\r\n  activated () { },\r\n  mounted () { },\r\n  beforeDestroy () { }\r\n}\r\n<\/script>\r\n\r\n<style>\r\n</style>\r\n'}}]);