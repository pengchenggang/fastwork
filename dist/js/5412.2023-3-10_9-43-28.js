"use strict";(self["webpackChunkfastwork"]=self["webpackChunkfastwork"]||[]).push([[5412],{5412:function(r,n,t){t.r(n),n["default"]='<template>\r\n  <div>\r\n    <compLayout>\r\n      <h1>autoHeight 自动高度计算</h1>\r\n      <h2 id="GS">概述</h2>\r\n      <p>主要是为了表格高度自适应用的</p>\r\n      <h2 id="APIPROPS">API属性</h2>\r\n      <table class="Alita">\r\n        <tr>\r\n          <th>属性</th>\r\n          <th>说明</th>\r\n          <th>类型</th>\r\n          <th>默认值</th>\r\n        </tr>\r\n        <tr>\r\n          <td>value</td>\r\n          <td>自动返回的高度数据，直接写v-model即可</td>\r\n          <td>Number</td>\r\n          <td>0</td>\r\n        </tr>\r\n        <tr>\r\n          <td>subValue</td>\r\n          <td>浏览器内部高度需要减去的数字</td>\r\n          <td>Number</td>\r\n          <td>0</td>\r\n        </tr>\r\n      </table>\r\n      <h2 id="JCSL">基础示例</h2>\r\n      <div style="height: 20px;"></div>\r\n      <playground filePath="src/views/components/autoHeightPage/autoHeightPageDemo.vue"\r\n                  title="autoHeight">\r\n        autoHeight 自动高度, 一般搭配tableZen使用, 改变浏览器高度的时候, 数据会变化\r\n      </playground>\r\n      <h2 id="YDM">源代码</h2>\r\n      <codeIn>\r\n        <codeZen url="src/components/autoHeight/autoHeight.vue"\r\n                 codeClass="language-xml"></codeZen>\r\n      </codeIn>\r\n    </compLayout>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: \'autoHeightPage\',\r\n  props: {},\r\n  components: {\r\n  },\r\n  data () {\r\n    return {\r\n    }\r\n  },\r\n  watch: {},\r\n  computed: {},\r\n  methods: {},\r\n  created () { },\r\n  activated () { },\r\n  mounted () { },\r\n  beforeDestroy () { }\r\n}\r\n<\/script>\r\n\r\n<style>\r\n</style>\r\n'}}]);